trigger:
  branches:
    include:
      - main
  paths:
    include:
      - terraform/**

variables:
  TF_VERSION: '1.5.7'
  TF_WORKING_DIR: 'terraform'

stages:
  - stage: Terraform_Init_Validate
    displayName: 'Terraform Init & Validate'
    jobs:
      - job: InitValidate
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseTerraform@0
            inputs:
              terraformVersion: $(TF_VERSION)

          - script: |
              cd $(TF_WORKING_DIR)
              terraform init -input=false
              terraform validate
            displayName: 'Terraform Init & Validate'
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)

  - stage: Terraform_Plan
    displayName: 'Terraform Plan'
    dependsOn: Terraform_Init_Validate
    jobs:
      - job: Plan
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseTerraform@0
            inputs:
              terraformVersion: $(TF_VERSION)

          - script: |
              cd $(TF_WORKING_DIR)
              terraform plan -input=false -out=tfplan
            displayName: 'Terraform Plan'
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(TF_WORKING_DIR)/tfplan'
              artifact: tfplan
              publishLocation: pipeline

  - stage: Terraform_Apply
    displayName: 'Terraform Apply'
    dependsOn: Terraform_Plan
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - job: Apply
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - download: current
            artifact: tfplan

          - task: UseTerraform@0
            inputs:
              terraformVersion: $(TF_VERSION)

          - script: |
              cd $(TF_WORKING_DIR)
              terraform apply -input=false tfplan
            displayName: 'Terraform Apply'
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
